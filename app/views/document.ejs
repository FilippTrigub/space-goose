<!DOCTYPE html>
<html>
<head>
    <title><%= documentTitle %> - AI Commenter</title>
    <!-- Include Quill stylesheet -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <style>
        body { font-family: sans-serif; display: flex; margin: 0; padding: 0; height: 100vh; }
        nav { background-color: #f8f9fa; padding: 15px; width: 200px; border-right: 1px solid #dee2e6; display: flex; flex-direction: column; }
        nav ul { list-style: none; padding: 0; margin: 0; }
        nav li { margin-bottom: 10px; }
        .main-content { flex-grow: 1; display: flex; flex-direction: column; overflow: hidden; }
        header { padding: 15px; border-bottom: 1px solid #dee2e6; background-color: #fff; }
        .editor-container { flex-grow: 1; padding: 20px; overflow-y: auto; display: flex; }
        #editor { flex: 2; border: 1px solid #ccc; background-color: #fff; height: calc(100vh - 150px); /* Adjust as needed */ }
        .comments-section { flex: 1; margin-left: 20px; padding: 15px; border: 1px solid #eee; background-color: #f9f9f9; overflow-y: auto; height: calc(100vh - 150px); /* Adjust */}
        .comment { margin-bottom: 10px; padding: 8px; background-color: #e9ecef; border-radius: 4px; font-size: 0.9em; }
        h1, h2 { margin-top: 0; }
    </style>
</head>
<body>
    <nav>
        <h4>Navigation</h4>
        <ul>
            <li><a href="/dashboard">Back to Dashboard</a></li>
            <!-- Add other nav links if needed -->
        </ul>
        <hr>
        <p>User: <%= user.displayName %></p>
        <a href="/auth/logout">Logout</a>
    </nav>
    <div class="main-content">
        <header>
            <h1><%= documentTitle %></h1>
            <small>Document ID: <%= documentId %></small>
        </header>
        <div class="editor-container">
            <!-- Create the editor container -->
            <div id="editor"></div>

            <div class="comments-section">
                <h2>AI Comments</h2>
                <% if (aiComments && aiComments.length > 0) { %>
                    <% aiComments.forEach(function(comment){ %>
                        <div class="comment">
                            <p><%= comment.text %></p>
                            <% if (comment.context) { %><small>Context: <%= comment.context %></small><% } %>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>No AI comments available yet.</p>
                <% } %>
                <!-- Placeholder for adding new comments -->
            </div>
        </div>
    </div>

    <!-- Include the Quill library -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

    <script>
        // Initialize Quill editor
        var quill = new Quill('#editor', {
            theme: 'snow',
            readOnly: true, // Start as read-only
            modules: {
                toolbar: false // No toolbar initially
            }
        });

        // Get the document content passed from the server
        // WARNING: This is raw Google Docs content structure, NOT directly usable by Quill.
        // We need a conversion function.
        const rawDocContent = <%- documentContent %>; // Use <%- %> for unescaped JSON

        console.log("Raw Google Docs Content Structure:", rawDocContent);

        // --- Placeholder for Content Conversion ---
        // This function needs to traverse the rawDocContent and build
        // Quill Delta operations (https://quilljs.com/docs/delta/)
        function convertGoogleDocsToQuillDelta(googleBodyContent) {
            let deltaOps = [];
            if (googleBodyContent && Array.isArray(googleBodyContent)) {
                googleBodyContent.forEach(element => {
                    if (element.paragraph) {
                        let paragraphText = '';
                        element.paragraph.elements.forEach(pe => {
                            if (pe.textRun && pe.textRun.content) {
                                paragraphText += pe.textRun.content;
                            }
                        });
                        // Very basic: just insert the text with a newline.
                        // Ignores all formatting (bold, italic, lists, etc.)
                        if (paragraphText) {
                           deltaOps.push({ insert: paragraphText });
                        } else {
                            // Handle empty paragraphs or elements without textRun (e.g., horizontal rule)
                            deltaOps.push({ insert: '\n' }); // Insert newline for paragraph break
                        }
                    }
                    // TODO: Handle other element types (tables, lists, images etc.)
                });
            }
            console.log("Generated Quill Delta Ops:", deltaOps);
            return { ops: deltaOps };
        }

        // Convert and set Quill content
        try {
            const quillContent = convertGoogleDocsToQuillDelta(rawDocContent);
            quill.setContents(quillContent);
        } catch (e) {
            console.error("Error setting Quill content:", e);
            quill.setText('Error loading document content. See console for details.');
        }

    </script>
</body>
</html> 