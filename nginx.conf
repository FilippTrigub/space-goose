user nginx;
worker_processes auto;
pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf; # UBI minimal might not use this structure

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6"; # Disable gzip for old IE6

    # Upstream for the Node.js authentication app
    upstream node_app {
        server 127.0.0.1:3000; # Use 127.0.0.1 explicitly
    }

    # Upstream for ttyd
    upstream ttyd_backend {
        server 127.0.0.1:7681; # Use 127.0.0.1 explicitly
    }

    server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        server_name _; # Listen for any hostname

        # Improve buffer sizes for potential large headers or requests
        client_body_buffer_size 16k;
        client_header_buffer_size 1k;
        large_client_header_buffers 2 1k;

        # Location for ttyd WebSocket connection (exact match)
        location = /ws {
            proxy_pass http://ttyd_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            access_log off; # Optional: Disable access logs for potentially noisy WebSockets
        }

        # Location for the Node.js app (handles login page, /auth/* routes, and everything else)
        location / {
            proxy_pass http://node_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # Still needed for potential websockets in Node app
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60s;
            proxy_send_timeout   60s;
            proxy_read_timeout   60s;
        }

        # Location specifically for the terminal page served by ttyd after login redirect
        # Note: ttyd itself serves the JS/HTML for the terminal UI, usually via the WebSocket connection or root.
        # We redirect to /terminal, but ttyd expects connections likely on /ws
        # This explicit block might not be strictly necessary if ttyd handles requests to /terminal internally
        # by serving the necessary page/assets or if it only relies on /ws.
        # Let's keep it simple for now and rely on the /ws check in the main location block.
        location /terminal {
             proxy_pass http://ttyd_backend/; # Direct to ttyd, rewriting path
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade"; # Handle potential upgrades
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         }

        # Remove the specific /ws block as it's handled within location / now
        # location /ws { ... }
    }
} 